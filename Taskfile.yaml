version: "3"

silent: true

tasks:
  default:
    desc: Start the dev version of the containerised Neovim environment.
    summary: |
      Start the dev version of the containerised Neovim environment.

      This default Task will start the development version of the containerised
      Neovim environment.
    deps:
      - build
    cmds:
      - docker run --interactive --tty --rm
        --volume "$(pwd)/init.lua:/root/.config/nvim/init.lua"
        --volume "$(pwd)/lua:/root/.config/nvim/lua"
        neovim:dev

  nvim-latest:
    desc: Start a tagged version of the containerised Neovim environment.
    summary: |
      Start a tagged version of the containerised Neovim environment to check
      compatibility.

      This default Task will start a tagged version of the containerised Neovim
      environment. Use this Task when you want to try out the latest frozen configuration
      for a Neovim environment.
    cmds:
      - docker run --interactive --tty --rm
        --volume "$(pwd)/init.lua:/root/.config/nvim/init.lua"
        --volume "$(pwd)/lua:/root/.config/nvim/lua"
        ghcr.io/jarmos-san/neovim-docker:latest

  cleanup:
    desc: Clean up the system after all development tasks are complete.
    summary: |
      Cleanup system after development is complete.

      This command will cleanup all the unnecessary files, folder, Docker
      images/containers after development on the project is complete.

      NOTE: This is a destructive process. Please read the set of commands it
      invokes before taking an irreversible action.
    cmds:
      - docker system prune --force

  release:
    desc: Create a public versioned release of the project on GitHub (WIP).
    summary: |
      Create a public release on GitHub.

      This Task relies on the GitHub CLI tool to create a draft version of the
      release on GitHub. For now the task is configured to only create a draft
      but later will be refactored to have more automation in place.
    cmds:
      - gh release create "Release Draft" --generate-notes --draft

  build:
    desc: Build the Neovim container's Docker image locally for testing purposes.
    summary: |
      Build the Neovim Docker image locally for testing purposes.

      This command will create a local Docker image of the Neovim container. This
      should be ideally done for testing & debugging purposes only.
    env:
      DOCKER_BUILDKIT: 1
    cmds:
      - docker build . --tag neovim:dev

#!/usr/bin/env bash

# Script to uninstall Neovimulus and all related data from the user's local machine
#
# Author: Somraj Saha
# License: MIT License
# (see https://github.com/Jarmos-san/neovimulus/blob/main/LICENSE for more information)

set -euo pipefail

# Some colour codes to make the formatted output prettier.
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
NOCOLOR="\033[0m"

#####################################################################
# Remove all unnecessary artifacts created by the script upon
# successful execution.
#####################################################################
cleanup() {
  # Remove the colour codes which was used to format the
  # STDERR/STDOUT messages.
  unset RED
  unset GREEN
  unset YELLOW
  unset BLUE
  unset NOCOLOR
}

#####################################################################
# Wrapper function to more easily output an error message to STDERR.
# Arguments:
#   The message to echo to STDERR.
# Outputs:
#   An ANSI colour code formatted message to print to STDERR based on
#   the message which is passed to the function as a parameter.
#####################################################################
function error() {
  echo -e "${RED}[ERROR]${NOCOLOR} $1"
}

#####################################################################
# Wrapper function to easily print a warning to STDOUT.
# Arguments:
#   The message to echo to STDOUT.
# Outputs:
#   An ANSI colour code formatted message to print to STDOUT based on
#   the message which is passed to the function as a parameter.
#####################################################################
function warn() {
  echo -e "${YELLOW}[WARN]${NOCOLOR} $1"
}

#####################################################################
# Wrapper function to easily print a success to STDOUT.
# Arguments:
#   The message to echo to STDOUT.
# Outputs:
#   An ANSI colour code formatted message to print to STDOUT based on
#   the message which is passed to the function as a parameter.
#####################################################################
function success() {
  echo -e "${GREEN}[SUCCESS]${NOCOLOR} $1"
}

#####################################################################
# Wrapper function to easily print a success to STDOUT.
# Arguments:
#   The message to echo to STDOUT.
# Outputs:
#   An ANSI colour code formatted message to print to STDOUT based on
#   the message which is passed to the function as a parameter.
#####################################################################
function info() {
  echo -e "${BLUE}[INFO]${NOCOLOR} $1"
}

#####################################################################
# Remove the files and folders created by Neovimulus on the user's
# local system.
# Arguments:
#   None
# Outputs:
#   None
#####################################################################
function uninstall() {
  rm --recursive --force "$HOME/.config/neovimulus"
  rm --recursive --force "$HOME/.local/share/nvim"
  rm --recursive --force "$HOME/.local/state/nvim"
}

#####################################################################
# Entrypoint of the script to invoke with all the arbitrary
# parameters the script can be invoked with.
# Arguments:
#   None
# Outputs:
#   None
#####################################################################
function main() {
  # Check if the Neovimulus directory exists else exit the script and avoid
  # unnecessary code execution.
  if ! [[ -d "$HOME/.config/neovimulus" ]]; then
    info "Neovimulus installation not found...are you sure it was installed earlier?"
    exit 1
  else
    info "Neovimulus will now be uninstalled from your system..."
    uninstall
    info "Neovimulus uninstalled...thanks for giving Neovimulus a try!"
  fi

}

# Invoke the script with all arbitrary parameters passed to it as flags
main "$@"

trap cleanup EXIT
